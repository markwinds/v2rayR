name: Build and Release

on:
  push:
    tags:
      - 'v*'  # 仅当标签以 "v" 开头时触发

jobs:
  build:
    name: Build and Release on Windows and Linux
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest]
        # os: [ubuntu-latest, windows-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install Node
      uses: actions/setup-node@v3

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable

    # 安装msys 这样windows编译环境就可以直接使用shell脚本
    - name: Install msys
      if: runner.os == 'Windows'
      uses: msys2/setup-msys2@v2  

    - name: Run build
      if: runner.os == 'Windows'
      run: |
        cd script
        bash ./build_ci.sh

    - name: Run build
      if: runner.os == 'Linux'
      run: |
        cd script
        chmod +x build_ci.sh
        ./build_ci.sh

    - name: Upload artifact windows
      if: runner.os == 'Windows'
      uses: actions/upload-artifact@v3
      with:
        name: v2ray_r-windows
        path: user-end/target/release/v2ray_r.exe

    - name: Upload artifact linux
      if: runner.os == 'Linux'
      uses: actions/upload-artifact@v3
      with:
        name: v2ray_r-linux
        path: user-end/target/release/v2ray_r


  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Download artifacts windows
      uses: actions/download-artifact@v3
      with:
        name: v2ray_r-windows
        path: ./

    # - name: Download artifacts linux
    #   uses: actions/download-artifact@v3
    #   with:
    #     name: v2ray_r-linux
    #     path: ./

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset for Windows
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: v2ray_r-windows
        asset_name: v2ray_r-windows.zip
        asset_content_type: application/zip

    # - name: Upload Release Asset for Linux
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_path: v2ray_r-linux
    #     asset_name: v2ray_r-linux.zip
    #     asset_content_type: application/zip
